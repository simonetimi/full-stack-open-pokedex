name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
           node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Check style
        run: npm run eslint
      - name: Test build
        run: npm run test

  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  deploy:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true

  notify:
    needs: [deploy]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Build Success
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: success()
        with:
          severity: info
          details: Build Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Build Failure
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: failure()
        with:
          severity: error
          details: Build Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}



  tag_release:
    needs: [ simple_deployment_pipeline ]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}